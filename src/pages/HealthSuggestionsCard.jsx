import React from "react";

const HealthSuggestionsCard = ({ 
  aqi = 157,
  userProfile = {
    isChildren: false,
    isSenior: false,
    hasBreathingProblem: false
  }
}) => {
  
  // Determine AQI level and get simple recommendations
  const getAQILevel = (value) => {
    if (value <= 50) return "good";
    if (value <= 100) return "okay";
    if (value <= 150) return "careful";
    if (value <= 200) return "bad";
    if (value <= 300) return "verybad";
    return "danger";
  };

  const level = getAQILevel(aqi);
  const isSensitive = Object.values(userProfile).some(v => v === true);

  // Get color scheme
  const getColors = () => {
    switch(level) {
      case "good": return { bg: "bg-green-50", border: "border-green-200", text: "text-green-700", badge: "bg-green-500" };
      case "okay": return { bg: "bg-yellow-50", border: "border-yellow-200", text: "text-yellow-700", badge: "bg-yellow-500" };
      case "careful": return { bg: "bg-orange-50", border: "border-orange-200", text: "text-orange-700", badge: "bg-orange-500" };
      case "bad": return { bg: "bg-red-50", border: "border-red-200", text: "text-red-700", badge: "bg-red-500" };
      case "verybad": return { bg: "bg-purple-50", border: "border-purple-200", text: "text-purple-700", badge: "bg-purple-500" };
      case "danger": return { bg: "bg-rose-50", border: "border-rose-200", text: "text-rose-700", badge: "bg-rose-900" };
      default: return { bg: "bg-gray-50", border: "border-gray-200", text: "text-gray-700", badge: "bg-gray-500" };
    }
  };

  const colors = getColors();

  // Simple action cards with large icons
  const getActions = () => {
    const actions = [];

    if (level === "good") {
      return [
        { emoji: "ЁЯПГтАНтЩВя╕П", title: "рдмрд╛рд╣рд░ рдЦреЗрд▓реЗрдВ", subtitle: "Play Outside", desc: "рдЖрдЬ рд╣рд╡рд╛ рдмрд╣реБрдд рдЕрдЪреНрдЫреА рд╣реИ", color: "green" },
        { emoji: "ЁЯЪ┤тАНтЩАя╕П", title: "рд╡реНрдпрд╛рдпрд╛рдо рдХрд░реЗрдВ", subtitle: "Exercise", desc: "рджреМрдбрд╝рдирд╛ рдФрд░ рд╕рд╛рдЗрдХрд┐рд▓ рдЪрд▓рд╛рдирд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИ", color: "green" },
        { emoji: "ЁЯкЯ", title: "рдЦрд┐рдбрд╝рдХрд┐рдпрд╛рдБ рдЦреЛрд▓реЗрдВ", subtitle: "Open Windows", desc: "рддрд╛рдЬреА рд╣рд╡рд╛ рдЕрдВрджрд░ рдЖрдиреЗ рджреЗрдВ", color: "green" }
      ];
    }

    if (level === "okay") {
      if (isSensitive) {
        return [
          { emoji: "тЪая╕П", title: "рд╕рд╛рд╡рдзрд╛рди рд░рд╣реЗрдВ", subtitle: "Be Careful", desc: "рдЬреНрдпрд╛рджрд╛ рджреЗрд░ рдмрд╛рд╣рд░ рди рд░рд╣реЗрдВ", color: "yellow" },
          { emoji: "ЁЯПа", title: "рдШрд░ рдореЗрдВ рд░рд╣реЗрдВ", subtitle: "Stay Inside", desc: "рдмреБрдЬреБрд░реНрдЧ рдФрд░ рдмрдЪреНрдЪреЗ рдШрд░ рдореЗрдВ рд░рд╣реЗрдВ", color: "yellow" },
          { emoji: "ЁЯкЯ", title: "рдЦрд┐рдбрд╝рдХрд┐рдпрд╛рдБ рдмрдВрдж рдХрд░реЗрдВ", subtitle: "Close Windows", desc: "рд╢рд╛рдо рдХреЛ рдЦрд┐рдбрд╝рдХрд┐рдпрд╛рдБ рдмрдВрдж рд░рдЦреЗрдВ", color: "yellow" }
        ];
      }
      return [
        { emoji: "ЁЯСН", title: "рд╕рд╛рдорд╛рдиреНрдп рдЧрддрд┐рд╡рд┐рдзрд┐", subtitle: "Normal Activity", desc: "рд╕рд╛рдорд╛рдиреНрдп рд▓реЛрдЧ рдмрд╛рд╣рд░ рдЬрд╛ рд╕рдХрддреЗ рд╣реИрдВ", color: "yellow" },
        { emoji: "тП░", title: "рд╕рдордп рд╕реАрдорд┐рдд рдХрд░реЗрдВ", subtitle: "Limit Time", desc: "рдмрд╣реБрдд рдЬреНрдпрд╛рджрд╛ рджреЗрд░ рдмрд╛рд╣рд░ рди рд░рд╣реЗрдВ", color: "yellow" }
      ];
    }

    if (level === "careful" || level === "bad") {
      actions.push(
        { emoji: "ЁЯШ╖", title: "рдорд╛рд╕реНрдХ рдкрд╣рдиреЗрдВ", subtitle: "Wear Mask", desc: "рдмрд╛рд╣рд░ рдЬрд╛рддреЗ рд╕рдордп N95 рдорд╛рд╕реНрдХ рдЬрд░реВрд░ рдкрд╣рдиреЗрдВ", color: "orange", critical: true },
        { emoji: "ЁЯПа", title: "рдШрд░ рдореЗрдВ рд░рд╣реЗрдВ", subtitle: "Stay Indoors", desc: "рдЬрд┐рддрдирд╛ рд╣реЛ рд╕рдХреЗ рдШрд░ рдореЗрдВ рд░рд╣реЗрдВ", color: "orange", critical: true }
      );
      
      if (isSensitive) {
        actions.push(
          { emoji: "ЁЯЪл", title: "рдмрд╛рд╣рд░ рди рдЬрд╛рдПрдВ", subtitle: "Don't Go Out", desc: "рдмрдЪреНрдЪреЗ, рдмреБрдЬреБрд░реНрдЧ рдФрд░ рдмреАрдорд╛рд░ рдШрд░ рдореЗрдВ рд░рд╣реЗрдВ", color: "red", critical: true },
          { emoji: "ЁЯТК", title: "рджрд╡рд╛рдИ рдкрд╛рд╕ рд░рдЦреЗрдВ", subtitle: "Keep Medicine", desc: "рдЕрдкрдиреА рджрд╡рд╛рдИ рд╣рдореЗрд╢рд╛ рдкрд╛рд╕ рд░рдЦреЗрдВ", color: "red", critical: true }
        );
      }
      
      actions.push(
        { emoji: "ЁЯкЯ", title: "рдЦрд┐рдбрд╝рдХреА рдмрдВрдж", subtitle: "Windows Closed", desc: "рд╕рднреА рдЦрд┐рдбрд╝рдХрд┐рдпрд╛рдБ рдФрд░ рджрд░рд╡рд╛рдЬреЗ рдмрдВрдж рд░рдЦреЗрдВ", color: "orange" },
        { emoji: "ЁЯТи", title: "рд╢реБрджреНрдзрд┐рдХрд░рдг рдпрдВрддреНрд░", subtitle: "Air Purifier", desc: "рдЕрдЧрд░ рд╣реЛ рддреЛ рд╢реБрджреНрдзрд┐рдХрд░рдг рдпрдВрддреНрд░ рдЪрд▓рд╛рдПрдВ", color: "orange" }
      );
    }

    if (level === "verybad" || level === "danger") {
      return [
        { emoji: "ЁЯЪи", title: "рдЖрдкрд╛рддрдХрд╛рд▓", subtitle: "EMERGENCY", desc: "рдмрд┐рд▓реНрдХреБрд▓ рдмрд╛рд╣рд░ рди рдЬрд╛рдПрдВ", color: "red", critical: true },
        { emoji: "ЁЯШ╖", title: "рдорд╛рд╕реНрдХ рдЕрдирд┐рд╡рд╛рд░реНрдп", subtitle: "Mask Required", desc: "рдмрд╛рд╣рд░ рдЬрд╛рдирд╛ рдЬрд░реВрд░реА рд╣реЛ рддреЛ рдорд╛рд╕реНрдХ рдкрд╣рдиреЗрдВ", color: "red", critical: true },
        { emoji: "ЁЯкЯ", title: "рд╕рдм рдмрдВрдж рдХрд░реЗрдВ", subtitle: "Seal Everything", desc: "рдЦрд┐рдбрд╝рдХреА, рджрд░рд╡рд╛рдЬреЗ рд╕рдм рдмрдВрдж рд░рдЦреЗрдВ", color: "red", critical: true },
        { emoji: "ЁЯПе", title: "рдбреЙрдХреНрдЯрд░ рд╕реЗ рдорд┐рд▓реЗрдВ", subtitle: "See Doctor", desc: "рдкрд░реЗрд╢рд╛рдиреА рд╣реЛ рддреЛ рддреБрд░рдВрдд рдбреЙрдХреНрдЯрд░ рдХреЛ рджрд┐рдЦрд╛рдПрдВ", color: "red", critical: true }
      ];
    }

    return actions;
  };

  const actions = getActions();

  return (
    <div className="w-full bg-white rounded-2xl shadow-lg border-2 border-gray-200 overflow-hidden">
      {/* Large Visual Header */}
      <div className={`${colors.bg} ${colors.border} border-b-2 px-5 py-6`}>
        <div className="text-center">
          {/* Big Emoji Status */}
          <div className="text-7xl mb-3">
            {level === "good" && "ЁЯШК"}
            {level === "okay" && "ЁЯШР"}
            {level === "careful" && "ЁЯШЯ"}
            {level === "bad" && "ЁЯШ╖"}
            {level === "verybad" && "ЁЯШи"}
            {level === "danger" && "тШая╕П"}
          </div>
          
          {/* Simple Status Text */}
          <h2 className="text-2xl font-bold text-gray-900 mb-2">
            {level === "good" && "рд╣рд╡рд╛ рдмрд╣реБрдд рдЕрдЪреНрдЫреА рд╣реИ"}
            {level === "okay" && "рд╣рд╡рд╛ рдареАрдХ рд╣реИ"}
            {level === "careful" && "рд╣рд╡рд╛ рдЦрд░рд╛рдм рд╣реИ"}
            {level === "bad" && "рд╣рд╡рд╛ рдмрд╣реБрдд рдЦрд░рд╛рдм рд╣реИ"}
            {level === "verybad" && "рд╣рд╡рд╛ рдмреЗрд╣рдж рдЦрд░рд╛рдм рд╣реИ"}
            {level === "danger" && "рдмрд╣реБрдд рдЦрддрд░рдирд╛рдХ"}
          </h2>
          
          <p className="text-sm text-gray-600">
            {level === "good" && "Air is Very Good"}
            {level === "okay" && "Air is Okay"}
            {level === "careful" && "Air is Bad"}
            {level === "bad" && "Air is Very Bad"}
            {level === "verybad" && "Air is Extremely Bad"}
            {level === "danger" && "Very Dangerous"}
          </p>

          {/* AQI Number Badge */}
          <div className={`inline-block ${colors.badge} text-white text-3xl font-bold px-6 py-3 rounded-xl mt-4`}>
            {aqi}
          </div>
        </div>
      </div>

      {/* Sensitive Group Warning */}
      {isSensitive && (level === "careful" || level === "bad" || level === "verybad" || level === "danger") && (
        <div className="mx-5 mt-5 bg-red-100 border-2 border-red-300 rounded-xl p-4">
          <div className="flex items-center gap-3">
            <div className="text-4xl">тЪая╕П</div>
            <div>
              <p className="text-lg font-bold text-red-800">рд╡рд┐рд╢реЗрд╖ рд╕рд╛рд╡рдзрд╛рдиреА</p>
              <p className="text-sm text-red-700">рдмрдЪреНрдЪреЗ, рдмреБрдЬреБрд░реНрдЧ рдФрд░ рдмреАрдорд╛рд░ рд▓реЛрдЧ рдмрд╣реБрдд рд╕рд╛рд╡рдзрд╛рди рд░рд╣реЗрдВ</p>
              <p className="text-xs text-red-600">Special care for children, elderly & sick people</p>
            </div>
          </div>
        </div>
      )}

      {/* Large Action Cards */}
      <div className="p-5">
        <h3 className="text-xl font-bold text-gray-900 mb-4 text-center">
          рдХреНрдпрд╛ рдХрд░реЗрдВ / What To Do
        </h3>
        
        <div className="space-y-3">
          {actions.map((action, index) => (
            <div 
              key={index}
              className={`${
                action.critical 
                  ? 'bg-red-50 border-2 border-red-300' 
                  : 'bg-gray-50 border-2 border-gray-200'
              } rounded-xl p-4 hover:shadow-md transition-shadow`}
            >
              <div className="flex items-center gap-4">
                {/* Large Emoji Icon */}
                <div className="flex-shrink-0 text-5xl">
                  {action.emoji}
                </div>
                
                {/* Text Content */}
                <div className="flex-1">
                  <p className="text-lg font-bold text-gray-900 mb-1">
                    {action.title}
                  </p>
                  <p className="text-sm text-gray-600 mb-1">
                    {action.subtitle}
                  </p>
                  <p className="text-sm text-gray-700">
                    {action.desc}
                  </p>
                </div>

                {/* Check or Alert Icon */}
                {action.critical ? (
                  <div className="flex-shrink-0 text-3xl">тЭЧ</div>
                ) : (
                  <div className="flex-shrink-0 text-3xl">тЬУ</div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Visual Guide - What NOT to do */}
      {(level === "careful" || level === "bad" || level === "verybad" || level === "danger") && (
        <div className="px-5 pb-5">
          <div className="bg-gray-100 rounded-xl p-4 border-2 border-gray-300">
            <h4 className="text-lg font-bold text-gray-900 mb-3 text-center">
              рдордд рдХрд░реЗрдВ / Don't Do
            </h4>
            
            <div className="grid grid-cols-2 gap-3">
              <div className="bg-white rounded-lg p-3 text-center border-2 border-red-200">
                <div className="text-4xl mb-2">ЁЯЪлЁЯПГ</div>
                <p className="text-sm font-semibold text-gray-800">рднрд╛рдЧрдирд╛ рдордд</p>
                <p className="text-xs text-gray-600">No Running</p>
              </div>
              
              <div className="bg-white rounded-lg p-3 text-center border-2 border-red-200">
                <div className="text-4xl mb-2">ЁЯЪлЁЯкЯ</div>
                <p className="text-sm font-semibold text-gray-800">рдЦрд┐рдбрд╝рдХреА рдЦреЛрд▓рдирд╛ рдордд</p>
                <p className="text-xs text-gray-600">Don't Open Windows</p>
              </div>
              
              <div className="bg-white rounded-lg p-3 text-center border-2 border-red-200">
                <div className="text-4xl mb-2">ЁЯЪлЁЯЪм</div>
                <p className="text-sm font-semibold text-gray-800">рдзреВрдореНрд░рдкрд╛рди рдордд рдХрд░реЗрдВ</p>
                <p className="text-xs text-gray-600">No Smoking</p>
              </div>
              
              <div className="bg-white rounded-lg p-3 text-center border-2 border-red-200">
                <div className="text-4xl mb-2">ЁЯЪлЁЯФе</div>
                <p className="text-sm font-semibold text-gray-800">рдЬрд▓рд╛рдирд╛ рдордд</p>
                <p className="text-xs text-gray-600">No Burning</p>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Emergency Contact Button */}
      {(level === "bad" || level === "verybad" || level === "danger") && (
        <div className="px-5 pb-5">
          <button className="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-4 rounded-xl transition-colors shadow-lg flex items-center justify-center gap-3 text-lg">
            <span className="text-2xl">ЁЯПе</span>
            <span>рдорджрдж рдХреЗ рд▓рд┐рдП рдХреЙрд▓ рдХрд░реЗрдВ / Call for Help</span>
          </button>
        </div>
      )}

      {/* Simple Footer */}
      <div className="px-5 pb-5">
        <div className="bg-blue-50 rounded-xl p-3 border-2 border-blue-200">
          <div className="flex items-center gap-2">
            <span className="text-2xl">ЁЯТб</span>
            <p className="text-sm text-gray-700">
              <strong>рд╕рд▓рд╛рд╣:</strong> рдЕрдкрдиреЗ рдФрд░ рдкрд░рд┐рд╡рд╛рд░ рдХреЗ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХрд╛ рдзреНрдпрд╛рди рд░рдЦреЗрдВ
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default HealthSuggestionsCard;
